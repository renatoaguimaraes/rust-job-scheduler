name: Merge main

on:
  push:
    branches:
    - main

jobs:
  prepare:
    name: Calculate Version and build number
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.short_sha.outputs.value }}
      new_release: ${{ steps.semantic.outputs.new_release_published }}
      release: ${{ steps.semantic.outputs.new_release_version }}
      release_notes: ${{ steps.semantic.outputs.new_release_notes }}
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ github.token }}
    - uses: cycjimmy/semantic-release-action@v3
      id: semantic
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        dry_run: true
        semantic_version: 18.0.1
    - name: Git Short sha
      id: short_sha
      run: echo "::set-output name=value::$(git rev-parse --short HEAD)"

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  dev-release:
    if: needs.prepare.outputs.new_release == 'true'
    name: Dev Release
    runs-on: ubuntu-latest
    needs:
    - prepare
    - check
    - test
    - fmt
    - clippy
    steps:
    - name: Create Pre Release
      uses: actions/create-release@v1
      env:
        BUILD: ${{ needs.prepare.outputs.build_number }}
        GITHUB_TOKEN: ${{ github.token }}
        VERSION: ${{ needs.prepare.outputs.release }}
      with:
        tag_name: ${{ env.VERSION }}.${{ env.BUILD }}
        release_name: ${{ env.VERSION }}.${{ env.BUILD }}
        body: ${{ github.event.head_commit.message }}
        prerelease: true

  draft-release:
    if: needs.prepare.outputs.new_release == 'true'
    name: Draft Release
    runs-on: ubuntu-latest
    needs:
    - prepare
    - check
    - test
    - fmt
    - clippy
    steps:
    - name: Delete Previous drafts
      uses: hugo19941994/delete-draft-releases@v1.0.0
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Create Draft Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ needs.prepare.outputs.release }}
        release_name: ${{ needs.prepare.outputs.release }}
        body: ${{ needs.prepare.outputs.release_notes }}
        draft: true
